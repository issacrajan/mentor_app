import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import '@mantine/core/styles.css';
import '@mantine/notifications/styles.css';
import '@mantine/dates/styles.css';
import {
  ColorSchemeScript,
  MantineProvider,
  createTheme,
  rem,
} from '@mantine/core';
import { Notifications } from '@mantine/notifications';
import { AppWrapper } from '@/ui/store/AppWrapper';
import { Open_Sans, Roboto_Mono } from 'next/font/google';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Mentor App',
  description: 'Generated by ',
};

const theme = createTheme({
  fontFamily: 'Inter, sans-serif',

  //fontFamily: "Verdana, sans-serif",
  //fontFamilyMonospace: "Monaco, Courier, monospace",
  // headings: { fontFamily: "Greycliff CF, sans-serif" },
  fontSizes: {
    xs: rem(14),
    sm: rem(18),
    md: rem(20),
    lg: rem(22),
    xl: rem(24),
  },
});

const openSans = Open_Sans({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-opensans',
});

//Configure the object for our second font
const robotoMono = Roboto_Mono({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto-mono',
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <ColorSchemeScript />
      </head>
      <body>
        <MantineProvider theme={theme}>
          <Notifications position="top-right" zIndex={1000} />
          <AppWrapper>{children}</AppWrapper>
        </MantineProvider>
      </body>
    </html>
  );
}
