import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import "@mantine/core/styles.css";
import "@mantine/notifications/styles.css";
import "@mantine/dates/styles.css";
import {
  ColorSchemeScript,
  MantineProvider,
  createTheme,
  rem,
} from "@mantine/core";
import { Notifications } from "@mantine/notifications";
import { AppWrapper } from "@/store/AppWrapper";
import { Open_Sans, Roboto_Mono } from "next/font/google";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Mentor App",
  description: "Generated by ",
};

const theme = createTheme({
  fontFamily: "Roboto, sans-serif",
  //fontFamily: "Verdana, sans-serif",
  fontFamilyMonospace: "Monaco, Courier, monospace",
  headings: { fontFamily: "Greycliff CF, sans-serif" },
  fontSizes: {
    xs: rem(14),
    sm: rem(16),
    md: rem(18),
    lg: rem(20),
    xl: rem(22),
  },
});

const openSans = Open_Sans({
  subsets: ["latin"],
  display: "swap",
  //ðŸ‘‡ Add variable to our object
  variable: "--font-opensans",
});

//ðŸ‘‡ Configure the object for our second font
const robotoMono = Roboto_Mono({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto-mono",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      className={`${openSans.variable} ${robotoMono.variable} font-sans`}
    >
      <head>
        <ColorSchemeScript />
      </head>
      <body>
        <MantineProvider theme={theme}>
          <Notifications position="top-right" zIndex={1000} />
          <AppWrapper>{children}</AppWrapper>
        </MantineProvider>
      </body>
    </html>
  );
}
